apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ .Release.Name }}-mysql-secrets
  namespace: {{ .Values.namespace }}
spec:
  refreshInterval: {{ .Values.secrets.refreshInterval | default "1h" }}
  secretStoreRef:
    name: {{ .Values.secrets.secretStoreName | default "aws-secrets-manager" }}
    kind: SecretStore
  target:
    name: {{ .Release.Name }}-mysql-credentials
    creationPolicy: Owner
  data:
    # MySQL credentials
    - secretKey: MYSQL_ROOT_PASSWORD
      remoteRef:
        key: {{ .Values.secrets.awsSecretKey }}
        property: MYSQL_ROOT_PASSWORD
    - secretKey: MYSQL_DATABASE
      remoteRef:
        key: {{ .Values.secrets.awsSecretKey }}
        property: MYSQL_DATABASE
    - secretKey: MYSQL_USER
      remoteRef:
        key: {{ .Values.secrets.awsSecretKey }}
        property: MYSQL_USER
    - secretKey: MYSQL_PASSWORD
      remoteRef:
        key: {{ .Values.secrets.awsSecretKey }}
        property: MYSQL_PASSWORD

    # Git credentials
    - secretKey: GIT_USERNAME
      remoteRef:
        key: {{ .Values.secrets.awsSecretKey }}
        property: GIT_USERNAME
    - secretKey: GIT_PAT
      remoteRef:
        key: {{ .Values.secrets.awsSecretKey }}
        property: GIT_PAT

    # SonarQube token
    - secretKey: SONARQUBE_TOKEN
      remoteRef:
        key: {{ .Values.secrets.awsSecretKey }}
        property: SONARQUBE_TOKEN

    # AWS credentials
    - secretKey: AWS_ACCESS_KEY_ID
      remoteRef:
        key: {{ .Values.secrets.awsSecretKey }}
        property: AWS_ACCESS_KEY_ID
    - secretKey: AWS_SECRET_ACCESS_KEY
      remoteRef:
        key: {{ .Values.secrets.awsSecretKey }}
        property: AWS_SECRET_ACCESS_KEY
