apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ .Release.Name }}-mysql-secrets
  namespace: {{ .Values.namespace }}
spec:
  refreshInterval: {{ .Values.secrets.refreshInterval | default "1h" }} # Default to 1-hour sync interval
  secretStoreRef:
    name: {{ .Values.secrets.secretStoreName | default (printf "%s-secretstore" .Release.Name) }}
    kind: SecretStore
  target:
    name: {{ .Release.Name }}-mysql-credentials
    creationPolicy: Owner # Ensures the Secret is owned by this ExternalSecret
  data:
    # Mapping for MySQL credentials
    - secretKey: MYSQL_ROOT_PASSWORD
      remoteRef:
        key: {{ .Values.secrets.awsSecretKey }}
        property: MYSQL_ROOT_PASSWORD
    - secretKey: MYSQL_DATABASE
      remoteRef:
        key: {{ .Values.secrets.awsSecretKey }}
        property: MYSQL_DATABASE
    - secretKey: MYSQL_USER
      remoteRef:
        key: {{ .Values.secrets.awsSecretKey }}
        property: MYSQL_USER
    - secretKey: MYSQL_PASSWORD
      remoteRef:
        key: {{ .Values.secrets.awsSecretKey }}
        property: MYSQL_PASSWORD
